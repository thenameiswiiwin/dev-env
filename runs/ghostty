#!/usr/bin/env bash

set -euo pipefail

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
if ! source "$script_dir/../utilities" 2>/dev/null; then
    echo "Failed to source utilities"
    exit 1
fi

main() {
    log "INFO" "Starting Ghostty setup"

    if [[ "$OS" != "Darwin" ]]; then
        log "WARN" "Ghostty is primarily designed for macOS, it might not be available for $OS"
        log "INFO" "Checking if Ghostty can be installed via other means..."

        if [[ "$OS" == "Linux" ]]; then
            log "INFO" "For Linux, checking if Ghostty can be built from source"

            # Check for required build dependencies
            required_deps=("curl" "git" "cmake" "pkg-config" "ninja-build" "libfontconfig1-dev" "libfreetype6-dev" "libxcb-xfixes0-dev" "libxkbcommon-dev")
            missing_deps=false

            for dep in "${required_deps[@]}"; do
                if ! command_exists "${dep%%-dev}" && ! dpkg -s "$dep" &>/dev/null; then
                    log "WARN" "Missing build dependency: $dep"
                    missing_deps=true
                fi
            done

            if [[ "$missing_deps" == "true" ]]; then
                log "INFO" "Would need to install missing dependencies before building Ghostty"
                if [[ ${DRY_RUN:-0} -eq 0 ]]; then
                    log "INFO" "You can manually install Ghostty from source following instructions at https://github.com/mitchellh/ghostty"
                fi
            else
                log "INFO" "All build dependencies are present. You can build Ghostty from source."
                log "INFO" "For instructions, see https://github.com/mitchellh/ghostty"
            fi
        fi

        return 0
    fi

    init_homebrew

    # Install Ghostty
    log "INFO" "Installing Ghostty terminal emulator"
    install_cask "ghostty" || log "WARN" "Failed to install Ghostty"

    config_dir="$XDG_CONFIG_HOME/ghostty"
    if [[ ! -d "$config_dir" ]]; then
        log "INFO" "Creating Ghostty configuration directory"
        execute "mkdir -p \"$config_dir\"" "Creating directory"
    fi

    # Check if configuration file exists in our repository
    if [[ -f "$DEV_ENV/env/.config/ghostty/config" ]]; then
        log "INFO" "Found Ghostty configuration file in repository"
        if [[ ! -f "$config_dir/config" ]]; then
            log "INFO" "Copying Ghostty configuration file"
            execute "cp \"$DEV_ENV/env/.config/ghostty/config\" \"$config_dir/config\"" "Copying configuration file"
        else
            log "INFO" "Ghostty configuration file already exists"
        fi
    fi

    log "INFO" "Verifying Ghostty installation"
    if cask_installed "ghostty"; then
        log "INFO" "Ghostty is installed"
    else
        log "WARN" "Ghostty installation could not be verified"
    fi

    log "SUCCESS" "Ghostty setup completed"
    return 0
}

main
exit $?

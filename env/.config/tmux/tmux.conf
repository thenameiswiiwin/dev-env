# =============================================
# Performance-Optimized tmux Configuration
# =============================================

# Terminal settings
set -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'

# Core settings
unbind C-b                                 # Unbind default prefix
set-option -g prefix C-a                   # Set prefix to Ctrl+a
bind-key C-a send-prefix                   # Pass through prefix when pressed twice
set -g base-index 1                        # Window numbering starts at 1
setw -g pane-base-index 1                  # Pane numbering starts at 1
set-option -g history-limit 25000          # Increase scrollback buffer
set -g mouse on                            # Enable mouse support

# Neovim optimizations
set -sg escape-time 0                      # Eliminate key delay (down from 10)
set-option -g focus-events on              # Better support for Neovim

# VI mode bindings
setw -g mode-keys vi                       # VI keybindings in copy mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Core keybindings
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display-message "tmux.conf reloaded"
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
bind -r ^ last-window                      # Jump to last active window

# Status bar configuration
set -g status-position top                 # Status bar on top
set -g status-interval 1                   # Update every second
set -g status-left " "                     # Minimal left status
set -g status-right "#{session_name}"      # Just show session name

# Window naming
set-option -g automatic-rename on                      # Auto rename windows
set-option -g automatic-rename-format '#{b:pane_current_path}'  # Use directory name

# =============================================
# Theme Configuration
# =============================================

# Initialize theme variable if not set (default to dark)
if-shell '[ -z "$(tmux show-environment -g TMUX_THEME 2>/dev/null)" ]' {
    set-environment -g TMUX_THEME "dark"
}

# Apply theme based on current setting
set-hook -g after-new-session "run-shell 'tmux source-file $XDG_CONFIG_HOME/tmux/theme-#{TMUX_THEME}.conf'"
set-hook -g after-new-window "run-shell 'tmux source-file $XDG_CONFIG_HOME/tmux/theme-#{TMUX_THEME}.conf'"
if-shell '[ "$(tmux show-environment -g TMUX_THEME)" = "dark" ]' {
    source-file $XDG_CONFIG_HOME/tmux/theme-dark.conf
} {
    source-file $XDG_CONFIG_HOME/tmux/theme-light.conf
}

# Theme toggle binding
bind T run-shell "if [ \"$(tmux show-environment -g TMUX_THEME)\" = \"dark\" ]; then tmux set-environment -g TMUX_THEME \"light\"; else tmux set-environment -g TMUX_THEME \"dark\"; fi; tmux source-file $XDG_CONFIG_HOME/tmux/tmux.conf; tmux display-message \"Theme switched to #{TMUX_THEME}\""

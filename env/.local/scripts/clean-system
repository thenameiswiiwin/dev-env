#!/usr/bin/env bash
# Cross-platform system cleanup utility

set -euo pipefail

# System detection
OS="$(uname -s)"
ARCH="$(uname -m)"
IS_ARM_CPU=$([ "$ARCH" = "arm64" ] || [ "$ARCH" = "aarch64" ] && echo 1 || echo 0)

echo "Starting system cleanup for $OS on $ARCH architecture..."

if [[ "$OS" == "Darwin" ]]; then
  # macOS cleanup
  echo "Cleaning brew packages..."
  if command -v brew >/dev/null 2>&1; then
    # Handle ARM architecture for Apple Silicon
    if [[ "$ARCH" == "arm64" ]]; then
      echo "Using optimized cleanup for Apple Silicon..."
      brew cleanup
      brew autoremove
    else
      # Standard Intel Mac cleanup
      brew cleanup
      brew autoremove
    fi
  fi

  echo "Cleaning system caches..."
  sudo rm -rf /Library/Caches/* &>/dev/null || true
  rm -rf ~/Library/Caches/* &>/dev/null || true

  echo "Cleaning logs..."
  sudo rm -rf /private/var/log/asl/*.asl &>/dev/null || true

  echo "Cleaning app temp files..."
  find /private/var/folders -type f -name "*.tmp" -delete &>/dev/null || true

  echo "Emptying trash..."
  rm -rf ~/.Trash/* &>/dev/null || true

  # Architecture-specific cleanup for Apple Silicon
  if [[ "$ARCH" == "arm64" ]]; then
    echo "Cleaning Rosetta 2 cache..."
    sudo rm -rf /Library/Apple/usr/share/rosetta/* &>/dev/null || true
  fi

elif [[ "$OS" == "Linux" ]]; then
  # Linux cleanup with distribution detection
  echo "Cleaning package caches..."
  if command -v apt &>/dev/null; then
    # Debian-based systems
    sudo apt clean
    sudo apt autoremove -y

    # Clear old kernels on Debian-based systems
    echo "Cleaning old kernels..."
    sudo apt purge -y "$(dpkg -l 'linux-image-*' | grep -v "$(uname -r)" | grep -v linux-image-generic | awk '{if($1=="ii") print $2}')" || true
  elif command -v pacman &>/dev/null; then
    # Arch-based systems
    sudo pacman -Sc --noconfirm
    sudo pacman -Rns "$(pacman -Qtdq)" --noconfirm 2>/dev/null || true

    # Clean package cache
    sudo paccache -r || true
  elif command -v dnf &>/dev/null; then
    # Fedora/RHEL-based systems
    sudo dnf clean all
    sudo dnf autoremove -y
  elif command -v apk &>/dev/null; then
    # Alpine Linux
    sudo apk cache clean
  fi

  echo "Cleaning temporary files..."
  sudo rm -rf /tmp/* &>/dev/null || true

  echo "Cleaning journal logs..."
  if command -v journalctl &>/dev/null; then
    sudo journalctl --vacuum-time=7d
  fi

  # ARM-specific cleanup
  if [[ "$IS_ARM_CPU" -eq 1 ]]; then
    echo "Performing ARM-specific cleanup..."
    # Add any ARM-specific cleanup steps here
  fi
fi

# Common cleanup for all systems
echo "Cleaning npm cache..."
if command -v npm &>/dev/null; then
  npm cache clean --force
fi

echo "Cleaning yarn cache..."
if command -v yarn &>/dev/null; then
  yarn cache clean
fi

echo "Cleaning pnpm cache..."
if command -v pnpm &>/dev/null; then
  pnpm store prune
fi

echo "Cleaning pip cache..."
if command -v pip3 &>/dev/null; then
  pip3 cache purge
fi

echo "Cleaning Docker resources..."
if command -v docker &>/dev/null; then
  docker system prune -f
fi

echo "Cleaning Cargo cache..."
if command -v cargo &>/dev/null; then
  cargo cache --autoclean
fi

echo "Cleaning Go cache..."
if command -v go &>/dev/null; then
  go clean -cache
  go clean -modcache
fi

echo "System cleanup completed!"
